# We need this because podman went complete-fucking-idiot, invented aardvark to kill cni, broke host-local
# so it always bridges to the internet (probably slirp4netns), and a bunch of other shit that i'm
# unable to figure out right now because it's gone complex too quicky and completely unnecessarily.
[network]

# Network backend determines what network driver will be used to set up and tear down container networks.
# Valid values are "cni" and "netavark".
# The default value is empty which means that it will automatically choose CNI or netavark. If there are
# already containers/images or CNI networks preset it will choose CNI.

network_backend = "netavark"

# The network name of the default network to attach pods to.
default_network = "default"

# The default subnet for the default network given in default_network.
default_subnet = "10.100.0.0/16"

# DefaultSubnetPools is a list of subnets and size which are used to
# allocate subnets automatically for podman network create.
# It will iterate through the list and will pick the first free subnet
# with the given size.
default_subnet_pools = [
    {"base" = "10.100.0.0/16", "size" = 24},
]

# Configure which rootless network program to use by default.
default_rootless_network_cmd = "pasta"

# Path to the directory where network configuration files are located.
# For the CNI backend the default is "/etc/cni/net.d" as root
# and "$HOME/.config/cni/net.d" as rootless.
# For the netavark backend "/etc/containers/networks" is used as root
# and "$graphroot/networks" as rootless.
#
#network_config_dir = "/etc/cni/net.d/"

#	A list of default pasta options that should be used running pasta.
# It accepts the pasta cli options, see pasta(1) for the full list of options.
#
#pasta_options = []

[engine]
add_compression = ["gzip", "zstd", "zstd:chunked"]

# Specify one or more external providers for the compose command.
compose_providers=[]

# Emit logs on each invocation of the compose command indicating that an
# external compose provider is being executed.
compose_warning_logs = true

# The compression format to use when pushing an image.
compression_format = "zstd:chunked"

# The compression level to use when pushing an image.
# For gzip, valid options are 1-9, with a default of 5.
# For zstd, valid options are 1-20, with a default of 3.
compression_level = 17

# Selects which logging mechanism to use for container engine events.
# Valid values are `journald`, `file` and `none`.
events_logger = "journald"

# Creates a more verbose container-create event which includes a JSON payload
# with detailed information about the container.
events_container_create_inspect_data = false

# Whenever Podman should log healthcheck events.
healthcheck_events = true

# MultiImageArchive - if true, the container engine allows for storing archives
# (e.g., of the docker-archive transport) with multiple images.  By default,
# Podman creates single-image archives.
multi_image_archive = true

# Path to the slirp4netns binary
#network_cmd_path = ""

# Default options to pass to the slirp4netns binary.
# Valid options values are:
#
# - allow_host_loopback=true|false: Allow the slirp4netns to reach the host loopback IP (`10.0.2.2`).
#   Default is false.
# - mtu=MTU: Specify the MTU to use for this network. (Default is `65520`).
# - cidr=CIDR: Specify ip range to use for this network. (Default is `10.0.2.0/24`).
# - enable_ipv6=true|false: Enable IPv6. Default is true. (Required for `outbound_addr6`).
# - outbound_addr=INTERFACE: Specify the outbound interface slirp should bind to (ipv4 traffic only).
# - outbound_addr=IPv4: Specify the outbound ipv4 address slirp should bind to.
# - outbound_addr6=INTERFACE: Specify the outbound interface slirp should bind to (ipv6 traffic only).
# - outbound_addr6=IPv6: Specify the outbound ipv6 address slirp should bind to.
# - port_handler=rootlesskit: Use rootlesskit for port forwarding. Default.
#   Note: Rootlesskit changes the source IP address of incoming packets to a IP address in the container
#   network namespace, usually `10.0.2.100`. If your application requires the real source IP address,
#   e.g. web server logs, use the slirp4netns port handler. The rootlesskit port handler is also used for
#   rootless containers when connected to user-defined networks.
# - port_handler=slirp4netns: Use the slirp4netns port forwarding, it is slower than rootlesskit but
#   preserves the correct source IP address. This port handler cannot be used for user-defined networks.
#
network_cmd_options = [
	"allow_host_loopback=true",
	"enable_ipv6=true",
	"port_handler=rootlesskit"
#	"port_handler=slirp4netns"
]

# Whether to use chroot instead of pivot_root in the runtime
no_pivot_root = false

# Set the exit policy of the pod when the last container exits.
pod_exit_policy = "continue"

# Whether to pull new image before running a container
pull_policy = "missing"

[engine.service_destinations]

[engine.runtimes]

[machine]
cpus=2
disk_size=10
memory=4096
