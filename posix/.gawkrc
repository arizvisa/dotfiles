# join.awk --- join an array into a string
function join(array, start, end, sep, result, i)
{
    increment = (start <= end)? +1 : -1
    if (sep == "")
        sep = " "
    else if (sep == SUBSEP) # magic value
        sep = ""
    else if (start != end)
        result = array[start]
    else
        result = ""
    for (i = start + increment; i != end; i += increment)
        result = result sep array[i]
    return result
}

function max(a, b) {
    return (a < b)? b : a
}

function min(a, b) {
    return (a < b)? a : b
}

function keys(array, result,        base, key)
{
    base = 0;
    for (key in array)
        result[base++] = key
    return base
}

function split0(string, array, fieldsep, seps)
{
    result = split(string, parts, fieldsep, separators)
    count = 0
    for (key in parts)
        array[count++] = parts[key]
    count = 0
    for (key in separators)
        seps[count++] = separators[key]
    return result
}

function append(left, right, result)
{
    count = 0
    for (key in left)
        result[count++] = left[key]
    for (key in right)
        result[count++] = right[key]
    return count
}

function getslice(array, start, end, result,        half, count, i, base)
{
    half = length(array)
    count = append(array, array, doublearray)

    if ((start < 0) && (end < 0)) {
        start = half + start
        end = half + end
    } else if ((start >= 0) && (end >= 0)) {
        start = start
        end = end
    } else {
        start = (start < 0)? half + start : start
        end = (istart < half)? half + end : end
    }

    start = (start >= count)? count : max(0, start)
    end = (start < half)? min(end, start + half) : min(end, count)

    base = 0
    for (i = start; i < end; i++)
        result[base++] = doublearray[i]
    return base
}
