#!/bin/sh
args=""
#args="$args -rlHptogDX"
args="$args -rlHD"
args="$args -dtog"
args="$args -ihs0PS"
args="$args --mkpath --stats"
args="$args --perms --acls --xattrs --preallocate"
failure_args_extra="--no-perms"

## paths to our binaries based on the platform
posix=rsync
windows=``

## determine which program to run
case "$platform" in
    msys|cygwin)
        prog=`[ -x "$windows" ] && echo "$windows"`
        ;;
esac

## if it's not found, then search the path
if [ -z "$prog" ]; then
    argv0=`readlink -f "$0"`
    IFS=:
    for p in $PATH; do
        rp=`readlink -f "$p/$posix"`
        [ -x "$rp" ] && [ ! -d "$rp" ] && [ `stat -f%i "$argv0" 2>/dev/null || echo "$argv0"` != `stat -f%i "$rp" 2>/dev/null || echo "$rp"` ] && prog="$rp"
    done
    unset IFS
fi

## now we just run the thing
[ -z "$prog" ] && echo "Unable to locate binary for program: $posix" 1>&2 && exit 1

"$prog" $args "$@"

ec=$?
[ "$ec" -eq 0 ] && exit $ec

columns=`tput cols`
threequarters=`expr "$columns" \* 3 \/ 4`
perl -e 'print($ARGV[0]x$ARGV[1]."\n")' '!' "$threequarters" 1>&2
printf 'Execution of %s has failed (code %d).\n' "$prog" "$ec" 1>&2
printf 'Trying again with the permission preservation flag disabled (%s).\n' "$failure_args_extra" 1>&2
perl -e 'print($ARGV[0]x$ARGV[1]."\n")' '-' "$threequarters" 1>&2

exec "$prog" $args $failure_args_extra "$@"
exit $?
